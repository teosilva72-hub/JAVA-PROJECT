<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:cc="http://xmlns.jcp.org/jsf/composite"
	xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions"
	xmlns:jsf="http://xmlns.jcp.org/jsf" 
	xmlns:pf="http://primefaces.org/ui"
	template="/template/dashboard-rov-layout.xhtml">
		
	<ui:define name="head" >
	
	<h:outputStylesheet name="reset_password.css" library="css/password" /> 
	
		  <script type="text/javascript">
	  
	  /* VALIDATION INPUT */
	          
      //Método para validação do Numero
	   jQuery.validator.addMethod("numero", function(value, element) { 
	    var numero = $('#userId').val();
	    var regex = new RegExp(/^[0-9]{1,6}$/); //Preenche campo numerico
	    if(numero.match(regex)) {  $('#userId').removeClass('invalid').addClass('valid'); return true;}
	    
	    else
	   $('#userId').removeClass('valid').addClass('invalid');
	    $('#userId-error').parent().find('.error').fadeIn(500);		  
	    return false;	
	}, "#{validatorMessages.validator_number_message}");
	 
	
	//Método para validação do Email
	jQuery.validator.addMethod("mail", function(value, element) { 
	    var email = $('#email').val();	    
	     var regex = new RegExp(/^[A-Za-z0-9_\-\.]+@[A-Za-z0-9_\-\.]{2,}\.[A-Za-z0-9]{3,}(\.[A-Za-z0-9])?/); 
	   
	     if(email.match(regex)) {  $('#email').removeClass('invalid').addClass('valid'); return true; }
	    
	    	else     
	    	$('#email').removeClass('valid').addClass('invalid');
		    $('#email-error').parent().find('.error').fadeIn(500);	     
	          return false;	 
	}, "#{validatorMessages.validator_email_message}");
	
	//Método para validação do Nome
	jQuery.validator.addMethod("validName", function(value, element) { 
	    var nome = $('#fullname').val();
	    var regex = new RegExp(/[^a-zA-Z\u00C0-\u00FF ]$/); //Preenche alfabeto com caracteres acentuado e espaço branco
	    if(nome.match(regex)){
	    	
	    $('#fullname').removeClass('valid').addClass('invalid');
	    $('#fullname-error').parent().find('.error').fadeIn(500);		    
	    return false;
	    	
	    }else {  $('#fullname').removeClass('invalid').addClass('valid'); return true; }
	}, "#{validatorMessages.validator_job_position_message}");
	
	//Método para validação do Nome
	jQuery.validator.addMethod("validJobPos", function(value, element) { 
	    var job = $('#jobPosition').val();
	    var regex = new RegExp(/[^a-zA-Z\u00C0-\u00FF ]$/); //Preenche alfabeto com caracteres acentuado e espaço branco
	    if(job.match(regex)){
	    	
	    $('#jobPosition').removeClass('valid').addClass('invalid');
	    $('#jobPosition-error').parent().find('.error').fadeIn(500);		    
	    return false;
	    	
	    }else { $('#jobPosition').removeClass('invalid').addClass('valid'); return true; }
	}, "#{validatorMessages.validator_job_position_message}");
	
	//Método para validação do Username
	jQuery.validator.addMethod("validUser", function(value, element) { 
	    var username = $('#username').val();
	    var regex = new RegExp(/[^A-Za-z0-9._]/); //Preenche alfabeto com caracteres acentuado e espaço branco
	    if(username.match(regex)){
	    	
	    $('#username').removeClass('valid').addClass('invalid');
	     $('#username-error').parent().find('.error').fadeIn(500);		    
	    return false;
	    	
	    }else {  $('#username').removeClass('invalid').addClass('valid'); return true;}
	}, "#{validatorMessages.validator_user_message}");
		   	  	   	   
  $(document).ready(function(){
	$('#change-password-form').validate({	
		rules:{
			password:{
				required: true,					
				minlength: 6,
				maxlength: 15
			},
			newPassword:{
				required: true,					
				minlength: 6,
				maxlength: 15
			},
			confPassword:{
				required: true,					
				minlength: 6,
				maxlength: 15,
				equalTo: "#newPassword"
			}
	      
		}, messages:{
	    	   password:{
	    	     required: "#{requiredMessages.required_user_change_password_old_password}",
                 minlength: "#{validatorMessages.validator_global_minlength}",
                 maxlength: "#{validatorMessages.validator_global_maxlength}"
	    	  },
	    	   newPassword:{
	    		required: "#{requiredMessages.required_user_change_password_new_password}",
	    		minlength: "#{validatorMessages.validator_global_minlength}",
	            maxlength: "#{validatorMessages.validator_global_maxlength}"
	    	  },
	    	  confPassword:{
	    		required: "#{requiredMessages.required_user_change_password_conf_password}",
	    		minlength: "#{validatorMessages.validator_global_minlength}",
	            maxlength: "#{validatorMessages.validator_global_maxlength}",
	            equalTo: "#{validatorMessages.validator_password_different}"
	            
	    	  }	       
	       }
	    });	
    });

  $(function() {
		setTimeout(function () {
			$('#message-div').hide(); 		
		}, 5000); 
	});
  
	</script>
			
	</ui:define>
	
	 <ui:define name="main-content" >
	 
	 <div id="message-div">
		<pf:messages id="msgs" showDetail="true" autoUpdate="true" closable="true" />	 
     </div>	
	 				
	 <h:form prependId="false" id="change-password-form">		
	 				   						
	<div class="titleFieldsPassword">
	 <h5 class="title text-center">#{usersLabels.change_password_title}</h5>	
	 <div class="titleGroupHr"></div>
	 </div>
	  
	  <div class="groupFieldsPassword">	 
	 	<div class="contentGroupPassword">
			<div class="input-fields" >
			   <div  id="input-password"> 
				  <span><i class="fas fa-lock" ></i></span>
				    <h:inputText value="#{userAccount.user.password}" p:type="password" id="password" p:placeholder="#{usersLabels.change_password_input_password_placeholder}" />                                  									
			         <label for="password" class="error" id="password-error"></label>                                         
					</div>
					</div>
				</div>
				
				<div class="contentGroupPassword">
					<div  class="input-fields" >
					     <div id="input-new-password">
						<span><i class="fas fa-key"></i></span>
						<h:inputText value="#{userAccount.user.newPassword}"
					      id="newPassword"  p:type="password" p:placeholder="#{usersLabels.change_password_input_new_password_placeholder}" />                                  									
                          <label for="newPassword" class="error" id="newPassword-error"></label>
					</div>
				</div>
				</div>
				
				<div class="contentGroupUser">
					<div class="input-fields" >
					  <div id="input-conf-password" >
						<span><i class="fas fa-unlock-alt"></i></span>
						<h:inputText value="#{userAccount.user.confPassword}" id="confPassword" p:type="password"  p:placeholder="#{usersLabels.change_password_input_conf_password_placeholder}" />                                  									
                          <label for="confPassword" class="error" id="confPassword-error"></label>
					</div>
				</div>
				</div>	
				
				<div class="contentGroupPassword">
				<div id="buttons-action">
													
			 <h:commandButton class="btn btn-dark btn-change" id="btn-change"
							value="#{usersLabels.change_password_btn_change}" action="#{userAccount.changePassword}" />		
					
			<h:commandButton value="#{usersLabels.change_password_btn_cancel}" id="btn-cancel"
				class="btn btn-dark btn-cancel" action="#{userAccount.resetChangePassword}">
				<f:ajax render="@form" resetValues="true"/>
			</h:commandButton>			
						
					</div>	
				</div>
							
			</div>
		</h:form>			
	
    </ui:define>


</ui:composition>	